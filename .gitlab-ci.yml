image: wemulate/backend-cicd:1.0

cache:
  paths:
    - venv/

stages:
  - init
  - linting
  - testing
  - build 

init:
  stage: init
  script:
    - "virtualenv venv"
    - "source venv/bin/activate"
    - "pip3 install -r requirements.txt"

linting-site:
  stage: linting
  script:
    - "source venv/bin/activate"
    - "flake8 --max-line-length=120 **/*.py"

pytest:
  stage: testing
  script:
    - "source venv/bin/activate"
    - export PYTHONPATH="$PYTHONPATH:."
    - python -c "import sys;print(sys.path)"
    - python3 -m pytest --ignore=tests/manual
  variables:
    WEMULATE_TESTING: "True" 


coverage:
  stage: testing
  script:
    - "source venv/bin/activate"
    - "python3 -m coverage run --source './' --omit './venv/*' -m pytest --ignore=tests/manual"
    - "coverage report -m"
  
build-docker:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  script:
    - "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
    - "docker build -f Dockerfile -t gitlab.dev.ifs.hsr.ch:45023/epj/2020/wemulate/wemulate-backend:$CI_COMMIT_SHA ."
    - "docker push gitlab.dev.ifs.hsr.ch:45023/epj/2020/wemulate/wemulate-backend:$CI_COMMIT_SHA"
    - "docker tag gitlab.dev.ifs.hsr.ch:45023/epj/2020/wemulate/wemulate-backend:$CI_COMMIT_SHA gitlab.dev.ifs.hsr.ch:45023/epj/2020/wemulate/wemulate-backend:latest"
    - "docker push gitlab.dev.ifs.hsr.ch:45023/epj/2020/wemulate/wemulate-backend:latest"

